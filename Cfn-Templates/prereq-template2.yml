Resources:
  NetworkVpcPeeringConnectionA4C938C7:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      PeerVpcId:
        Ref: MedIvpcA6788FE7
      VpcId:
        Ref: Vendvpc6E92A327
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Network/VpcPeeringConnection
  NetworkRoute2Vendvpc07125C14A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcpublicSubnet1RouteTable7EC06E1F
      DestinationCidrBlock:
        Fn::GetAtt:
          - Vendvpc6E92A327
          - CidrBlock
      VpcPeeringConnectionId:
        Ref: NetworkVpcPeeringConnectionA4C938C7
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Network/Route2Vend-vpc0
  NetworkRoute2Vendvpc173736CD7:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcpublicSubnet2RouteTableAF7EE7A0
      DestinationCidrBlock:
        Fn::GetAtt:
          - Vendvpc6E92A327
          - CidrBlock
      VpcPeeringConnectionId:
        Ref: NetworkVpcPeeringConnectionA4C938C7
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Network/Route2Vend-vpc1
  NetworkRoute2MedIvpc0ECAF8DC9:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcpublicSubnet1RouteTable0F18C1BE
      DestinationCidrBlock:
        Fn::GetAtt:
          - MedIvpcA6788FE7
          - CidrBlock
      VpcPeeringConnectionId:
        Ref: NetworkVpcPeeringConnectionA4C938C7
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Network/Route2MedI-vpc0
  NetworkRoute2MedIvpc1EB10BD77:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcpublicSubnet2RouteTableAD89256A
      DestinationCidrBlock:
        Fn::GetAtt:
          - MedIvpcA6788FE7
          - CidrBlock
      VpcPeeringConnectionId:
        Ref: NetworkVpcPeeringConnectionA4C938C7
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Network/Route2MedI-vpc1
  NetworkSGforMedVendorA1931B8A3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkForPrereqStack/Network/SG-for-MedVendorA
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - Vendvpc6E92A327
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - Vendvpc6E92A327
                    - CidrBlock
                - :22
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp:
            Fn::GetAtt:
              - Vendvpc6E92A327
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - Vendvpc6E92A327
                    - CidrBlock
                - :ICMP Type 8
          FromPort: 8
          IpProtocol: icmp
          ToPort: -1
      Tags:
        - Key: Env
          Value: VendorA
      VpcId:
        Ref: MedIvpcA6788FE7
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Network/SG-for-MedVendorA/Resource
  NetworkSGforMedVendorB1D054501:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkForPrereqStack/Network/SG-for-MedVendorB
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - Vendvpc6E92A327
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - Vendvpc6E92A327
                    - CidrBlock
                - :3389
          FromPort: 3389
          IpProtocol: tcp
          ToPort: 3389
        - CidrIp:
            Fn::GetAtt:
              - Vendvpc6E92A327
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - Vendvpc6E92A327
                    - CidrBlock
                - :ICMP Type 8
          FromPort: 8
          IpProtocol: icmp
          ToPort: -1
      Tags:
        - Key: Env
          Value: VendorB
      VpcId:
        Ref: MedIvpcA6788FE7
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Network/SG-for-MedVendorB/Resource
  MedIvpcA6788FE7:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: MedI-vpc
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/Resource
  MedIvpcMedIvpcpublicSubnet1Subnet1C21994F:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: MedI-vpc-public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1/Subnet
  MedIvpcMedIvpcpublicSubnet1RouteTable7EC06E1F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1/RouteTable
  MedIvpcMedIvpcpublicSubnet1RouteTableAssociation9A0910EC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcpublicSubnet1RouteTable7EC06E1F
      SubnetId:
        Ref: MedIvpcMedIvpcpublicSubnet1Subnet1C21994F
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1/RouteTableAssociation
  MedIvpcMedIvpcpublicSubnet1DefaultRoute5484422B:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcpublicSubnet1RouteTable7EC06E1F
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MedIvpcIGW8913A8B0
    DependsOn:
      - MedIvpcVPCGWCF016C9B
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1/DefaultRoute
  MedIvpcMedIvpcpublicSubnet1EIP538B42AD:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1/EIP
  MedIvpcMedIvpcpublicSubnet1NATGatewayA1F49263:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MedIvpcMedIvpcpublicSubnet1Subnet1C21994F
      AllocationId:
        Fn::GetAtt:
          - MedIvpcMedIvpcpublicSubnet1EIP538B42AD
          - AllocationId
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1
    DependsOn:
      - MedIvpcMedIvpcpublicSubnet1DefaultRoute5484422B
      - MedIvpcMedIvpcpublicSubnet1RouteTableAssociation9A0910EC
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet1/NATGateway
  MedIvpcMedIvpcpublicSubnet2SubnetD4C2EC28:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: MedI-vpc-public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2/Subnet
  MedIvpcMedIvpcpublicSubnet2RouteTableAF7EE7A0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2/RouteTable
  MedIvpcMedIvpcpublicSubnet2RouteTableAssociationCB9D0BFE:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcpublicSubnet2RouteTableAF7EE7A0
      SubnetId:
        Ref: MedIvpcMedIvpcpublicSubnet2SubnetD4C2EC28
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2/RouteTableAssociation
  MedIvpcMedIvpcpublicSubnet2DefaultRoute4ED81EF2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcpublicSubnet2RouteTableAF7EE7A0
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MedIvpcIGW8913A8B0
    DependsOn:
      - MedIvpcVPCGWCF016C9B
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2/DefaultRoute
  MedIvpcMedIvpcpublicSubnet2EIPC4AA711F:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2/EIP
  MedIvpcMedIvpcpublicSubnet2NATGatewayF5FBB007:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MedIvpcMedIvpcpublicSubnet2SubnetD4C2EC28
      AllocationId:
        Fn::GetAtt:
          - MedIvpcMedIvpcpublicSubnet2EIPC4AA711F
          - AllocationId
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2
    DependsOn:
      - MedIvpcMedIvpcpublicSubnet2DefaultRoute4ED81EF2
      - MedIvpcMedIvpcpublicSubnet2RouteTableAssociationCB9D0BFE
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-publicSubnet2/NATGateway
  MedIvpcMedIvpcegressSubnet1Subnet6D8AE64B:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: MedI-vpc-egress
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet1/Subnet
  MedIvpcMedIvpcegressSubnet1RouteTable004561D4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet1/RouteTable
  MedIvpcMedIvpcegressSubnet1RouteTableAssociation56CC9460:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcegressSubnet1RouteTable004561D4
      SubnetId:
        Ref: MedIvpcMedIvpcegressSubnet1Subnet6D8AE64B
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet1/RouteTableAssociation
  MedIvpcMedIvpcegressSubnet1DefaultRoute726A1F76:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcegressSubnet1RouteTable004561D4
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MedIvpcMedIvpcpublicSubnet1NATGatewayA1F49263
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet1/DefaultRoute
  MedIvpcMedIvpcegressSubnet2Subnet73A9B830:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: MedI-vpc-egress
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet2/Subnet
  MedIvpcMedIvpcegressSubnet2RouteTable12689959:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet2/RouteTable
  MedIvpcMedIvpcegressSubnet2RouteTableAssociation984DC115:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcegressSubnet2RouteTable12689959
      SubnetId:
        Ref: MedIvpcMedIvpcegressSubnet2Subnet73A9B830
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet2/RouteTableAssociation
  MedIvpcMedIvpcegressSubnet2DefaultRoute1F27A65B:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MedIvpcMedIvpcegressSubnet2RouteTable12689959
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MedIvpcMedIvpcpublicSubnet2NATGatewayF5FBB007
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/MedI-vpc-egressSubnet2/DefaultRoute
  MedIvpcIGW8913A8B0:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MedI-vpc
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/IGW
  MedIvpcVPCGWCF016C9B:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MedIvpcA6788FE7
      InternetGatewayId:
        Ref: MedIvpcIGW8913A8B0
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/VPCGW
  MedIvpcRestrictDefaultSecurityGroupCustomResourceAA02CC9C:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - MedIvpcA6788FE7
          - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedI-vpc/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :security-group/
                        - Fn::GetAtt:
                            - MedIvpcA6788FE7
                            - DefaultSecurityGroup
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :security-group/
                        - Fn::GetAtt:
                            - Vendvpc6E92A327
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs16.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386
      aws:asset:property: Code
  Vendvpc6E92A327:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Vend-vpc
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Resource
  VendvpcVendvpcpublicSubnet1SubnetCBEFC5C6:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.1.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Vend-vpc-public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1/Subnet
  VendvpcVendvpcpublicSubnet1RouteTable0F18C1BE:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1/RouteTable
  VendvpcVendvpcpublicSubnet1RouteTableAssociation5F6F204B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcpublicSubnet1RouteTable0F18C1BE
      SubnetId:
        Ref: VendvpcVendvpcpublicSubnet1SubnetCBEFC5C6
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1/RouteTableAssociation
  VendvpcVendvpcpublicSubnet1DefaultRoute22937F10:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcpublicSubnet1RouteTable0F18C1BE
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VendvpcIGWA6C97A9C
    DependsOn:
      - VendvpcVPCGW907057CD
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1/DefaultRoute
  VendvpcVendvpcpublicSubnet1EIPBE14E5D2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1/EIP
  VendvpcVendvpcpublicSubnet1NATGatewayEAA0E0F7:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VendvpcVendvpcpublicSubnet1SubnetCBEFC5C6
      AllocationId:
        Fn::GetAtt:
          - VendvpcVendvpcpublicSubnet1EIPBE14E5D2
          - AllocationId
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1
    DependsOn:
      - VendvpcVendvpcpublicSubnet1DefaultRoute22937F10
      - VendvpcVendvpcpublicSubnet1RouteTableAssociation5F6F204B
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet1/NATGateway
  VendvpcVendvpcpublicSubnet2Subnet35E07673:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.1.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Vend-vpc-public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2/Subnet
  VendvpcVendvpcpublicSubnet2RouteTableAD89256A:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2/RouteTable
  VendvpcVendvpcpublicSubnet2RouteTableAssociationF09025CF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcpublicSubnet2RouteTableAD89256A
      SubnetId:
        Ref: VendvpcVendvpcpublicSubnet2Subnet35E07673
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2/RouteTableAssociation
  VendvpcVendvpcpublicSubnet2DefaultRouteD870E383:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcpublicSubnet2RouteTableAD89256A
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VendvpcIGWA6C97A9C
    DependsOn:
      - VendvpcVPCGW907057CD
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2/DefaultRoute
  VendvpcVendvpcpublicSubnet2EIP08CBF362:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2/EIP
  VendvpcVendvpcpublicSubnet2NATGateway9948469A:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VendvpcVendvpcpublicSubnet2Subnet35E07673
      AllocationId:
        Fn::GetAtt:
          - VendvpcVendvpcpublicSubnet2EIP08CBF362
          - AllocationId
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2
    DependsOn:
      - VendvpcVendvpcpublicSubnet2DefaultRouteD870E383
      - VendvpcVendvpcpublicSubnet2RouteTableAssociationF09025CF
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-publicSubnet2/NATGateway
  VendvpcVendvpcegressSubnet1Subnet7F2535FB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.1.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Vend-vpc-egress
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet1/Subnet
  VendvpcVendvpcegressSubnet1RouteTableFDCA4064:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet1
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet1/RouteTable
  VendvpcVendvpcegressSubnet1RouteTableAssociation4C414129:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcegressSubnet1RouteTableFDCA4064
      SubnetId:
        Ref: VendvpcVendvpcegressSubnet1Subnet7F2535FB
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet1/RouteTableAssociation
  VendvpcVendvpcegressSubnet1DefaultRouteC2B9C3C0:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcegressSubnet1RouteTableFDCA4064
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VendvpcVendvpcpublicSubnet1NATGatewayEAA0E0F7
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet1/DefaultRoute
  VendvpcVendvpcegressSubnet2Subnet93B99D76:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.1.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Vend-vpc-egress
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet2/Subnet
  VendvpcVendvpcegressSubnet2RouteTable74BF1126:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      Tags:
        - Key: Name
          Value: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet2
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet2/RouteTable
  VendvpcVendvpcegressSubnet2RouteTableAssociation57F4FBB9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcegressSubnet2RouteTable74BF1126
      SubnetId:
        Ref: VendvpcVendvpcegressSubnet2Subnet93B99D76
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet2/RouteTableAssociation
  VendvpcVendvpcegressSubnet2DefaultRoute844917CF:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VendvpcVendvpcegressSubnet2RouteTable74BF1126
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VendvpcVendvpcpublicSubnet2NATGateway9948469A
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/Vend-vpc-egressSubnet2/DefaultRoute
  VendvpcIGWA6C97A9C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Vend-vpc
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/IGW
  VendvpcVPCGW907057CD:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vendvpc6E92A327
      InternetGatewayId:
        Ref: VendvpcIGWA6C97A9C
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/VPCGW
  VendvpcRestrictDefaultSecurityGroupCustomResource512992C2:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - Vendvpc6E92A327
          - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/RestrictDefaultSecurityGroupCustomResource/Default
  VendvpcS3Endpoint053B6798:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .s3
      VpcId:
        Ref: Vendvpc6E92A327
      RouteTableIds:
        - Ref: VendvpcVendvpcegressSubnet1RouteTableFDCA4064
        - Ref: VendvpcVendvpcegressSubnet2RouteTable74BF1126
      VpcEndpointType: Gateway
    Metadata:
      aws:cdk:path: CdkForPrereqStack/Vend-vpc/S3Endpoint/Resource
  MedServerMedLinuxServerVendorAKeyPair73E833C6:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: medlinuxserver-vendora-key-pair
      Tags:
        - Key: Env
          Value: VendorA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedServer/MedLinuxServer-VendorAKeyPair
  MedServerMedWinServerVendorBKeyPair7E614761:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: medwinserver-vendorb-key-pair
      Tags:
        - Key: Env
          Value: VendorB
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedServer/MedWinServer-VendorB}KeyPair
  MedServerMedLinuxServerVendorAInstanceRole48981F4F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: MedLinuxServer-VendorA
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedServer/MedLinuxServer-VendorA/InstanceRole/Resource
  MedServerMedLinuxServerVendorAInstanceProfileDA803CFF:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: MedServerMedLinuxServerVendorAInstanceRole48981F4F
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedServer/MedLinuxServer-VendorA/InstanceProfile
  MedServerMedLinuxServerVendorA990CC0FE:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: MedServerMedLinuxServerVendorAInstanceProfileDA803CFF
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.small
      KeyName: medlinuxserver-vendora-key-pair
      SecurityGroupIds:
        - Fn::GetAtt:
            - NetworkSGforMedVendorA1931B8A3
            - GroupId
      SubnetId:
        Ref: MedIvpcMedIvpcegressSubnet1Subnet6D8AE64B
      Tags:
        - Key: Name
          Value: MedLinuxServer-VendorA
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - MedServerMedLinuxServerVendorAInstanceRole48981F4F
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedServer/MedLinuxServer-VendorA/Resource
  MedServerMedWinServerVendorBInstanceRole22861140:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: MedWinServer-VendorB
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedServer/MedWinServer-VendorB/InstanceRole/Resource
  MedServerMedWinServerVendorBInstanceProfileDA6B5095:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: MedServerMedWinServerVendorBInstanceRole22861140
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedServer/MedWinServer-VendorB/InstanceProfile
  MedServerMedWinServerVendorB0087A5C3:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: MedServerMedWinServerVendorBInstanceProfileDA6B5095
      ImageId:
        Ref: SsmParameterValueawsserviceamiwindowslatestWindowsServer2022JapaneseFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.small
      KeyName: medwinserver-vendorb-key-pair
      SecurityGroupIds:
        - Fn::GetAtt:
            - NetworkSGforMedVendorB1D054501
            - GroupId
      SubnetId:
        Ref: MedIvpcMedIvpcegressSubnet1Subnet6D8AE64B
      Tags:
        - Key: Name
          Value: MedWinServer-VendorB
      UserData:
        Fn::Base64: |-
          <powershell><powershell>
          # Enable the Ping Firewall rule
          Set-NetFirewallRule -Name "FPS-ICMP4-ERQ-In" -ErrorAction SilentlyContinue -Enabled True
          # Create RDP User
          Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -name "ConsentPromptBehaviorAdmin"  -value "0"
          Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -name "EnableLUA" -value "0"
          Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -name "PromptOnSecureDesktop" -value "0"
          Start-Process -FilePath "net" -ArgumentList "user testuser Test123! /add" -Verb runAs
          Start-Process -FilePath "net" -ArgumentList "localgroup testuser sky365 /add" -Verb runAs
          </powershell></powershell>
    DependsOn:
      - MedServerMedWinServerVendorBInstanceRole22861140
    Metadata:
      aws:cdk:path: CdkForPrereqStack/MedServer/MedWinServer-VendorB/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21Ry27CMBD8lt6NWzhUXBFCCFVqrVBxrRxngYVkHdlrEIry77XzaFqpp50dr2f2sZDLV/nypO9+ZorrrMRcNnvW5ioi9dWAWchmfaSDWisAh3RaWyIwjJZE5DMbGMQeTHDIj62zoU70X+JQG9FrCBXyEs0+5ATcFf6gTulT5yVM/MStvLcG9Wi72akU3jVvNcNdP4RyeItw0tsRg4t4LOgbGLIVxxHPFRCLgYk9bqioLRIPpb/TN3gojU7syLMmA71Bj1uBupKNsnGwzmZAme1HGeNYr5w9Ygltm8iPwHVgkYG3wSXd4NlWUxq///8UVW5YgBNxM8DxYqd4m85dO11BnD0l8VgFpqW1gmwB8uKfb/OlnKeTXzzizAVirEBmffwGLGjcIQ4CAAA=
    Metadata:
      aws:cdk:path: CdkForPrereqStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  NetworkvendVPCId4867813A:
    Value:
      Ref: Vendvpc6E92A327
  NetworkvendorASGId434D7420:
    Value:
      Fn::GetAtt:
        - NetworkSGforMedVendorA1931B8A3
        - GroupId
  NetworkvendorBSGIdFBA5D7D9:
    Value:
      Fn::GetAtt:
        - NetworkSGforMedVendorB1D054501
        - GroupId
  MedServerGetLinuxSSHKeyCommandADC20F76:
    Value:
      Fn::Join:
        - ""
        - - aws ssm get-parameter --name /ec2/keypair/
          - Fn::GetAtt:
              - MedServerMedLinuxServerVendorAKeyPair73E833C6
              - KeyPairId
          - " --region ap-northeast-1 --with-decryption --query Parameter.Value --output text"
  MedServerGetWinSSHKeyCommandF7E3C1D5:
    Value:
      Fn::Join:
        - ""
        - - aws ssm get-parameter --name /ec2/keypair/
          - Fn::GetAtt:
              - MedServerMedWinServerVendorBKeyPair7E614761
              - KeyPairId
          - " --region ap-northeast-1 --with-decryption --query Parameter.Value --output text"
  MedServerMedLinuxServerVendorAIP57E7487C:
    Value:
      Fn::GetAtt:
        - MedServerMedLinuxServerVendorA990CC0FE
        - PrivateIp
  MedServerMedWinServerVendorBIPE58B4A3F:
    Value:
      Fn::GetAtt:
        - MedServerMedWinServerVendorB0087A5C3
        - PrivateIp
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  SsmParameterValueawsserviceamiwindowslatestWindowsServer2022JapaneseFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2022-Japanese-Full-Base
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

